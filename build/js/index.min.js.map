{"version":3,"sources":["index.js"],"names":["mainHeader","initiateMenu","featuresSlider","toggleServiceList","serviceTitle","allowTouchMove","spaceBetween","buttonPrevious","breakpoints","slidesPerView","evt","inputName","inputPhone","phonePattern","ICONS_SIZES","initiateMap","addEventListener","offset","hideMenu","menuToggler","classList","remove","menuList","document","querySelector","toggle","toggleMenu","window","innerWidth","features","Swiper","centeredSlides","loop","767","pagination","el","clickable","call","serviceList","querySelectorAll","service","style","DESKTOP_WIDTH$1","length","index","initiatePartners","partners","partnersSlider","1199","buttonNext","swiperSlider","slideNext","DESKTOP","sizes","MOBILE","slidePrev","icon","map","bigMap","ymaps","zoom","setIconSizes","Map","center","iconLocation","location","href","split","iconLayout","iconImageOffset","point","Placemark","changedIcon","iconImageHref","iconImageSize","set","geoObjects","add","options","allowedSymbols","target","contactsForm","test","value","substring","inputEmail","setCustomValidity","reportValidity","initiateServices","submitButton","preventDefault"],"mappings":"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","file":"index.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  const DESKTOP_WIDTH = 1200;\n\n  const initiateMenu = () => {\n    const mainHeader = document.querySelector(`.main-header`);\n    const menuToggler = mainHeader.querySelector(`.main-header__toggler`);\n    const menuList = mainHeader.querySelector(`.main-header__list`);\n\n    const toggleMenu = () => {\n      menuToggler.classList.toggle(`main-header__toggler--active`);\n      menuList.classList.toggle(`main-header__list--active`);\n    };\n\n    const hideMenu = () => {\n      menuToggler.classList.remove(`main-header__toggler--active`);\n      menuList.classList.remove(`main-header__list--active`);\n    };\n\n    menuToggler.addEventListener(`click`, toggleMenu);\n\n    document.addEventListener(`keydown`, (evt) => {\n      if (evt.keyCode === 27) {\n        hideMenu();\n      }\n    });\n\n    window.addEventListener(`resize`, () => {\n      if (window.innerWidth >= DESKTOP_WIDTH) {\n        hideMenu();\n      }\n    });\n  };\n\n  const initiateFeatures = () => {\n    const features = document.querySelector(`.features`);\n    const featuresSlider = features.querySelector(`.features__slider`);\n\n    const swiperSliderFeatures = new Swiper(featuresSlider, {\n      direction: `horizontal`,\n      centeredSlides: true,\n      allowTouchMove: true,\n      loop: true,\n      slidesPerView: 3,\n\n      breakpoints: {\n        767: {\n          slidesPerView: 1\n        }\n      },\n\n      pagination: {\n        el: `.swiper-pagination`,\n        clickable: true\n      }\n    });\n  };\n\n  const DESKTOP_WIDTH$1 = 1200;\n\n  const initiateServices = () => {\n    const services = document.querySelector(`.services`);\n    const singleServices = [].slice.call(\n        services.querySelectorAll(`.single-service`)\n    );\n\n    const toggleServiceList = (serviceTitle, serviceList) => {\n      serviceTitle.classList.toggle(`single-service__title--active`);\n      serviceList.classList.toggle(`single-service__list--active`);\n    };\n\n    singleServices.forEach((service, index) => {\n      const serviceTitle = service.querySelector(`.single-service__title`);\n      const serviceList = service.querySelector(`.single-service__list`);\n      serviceList.style.zIndex = `${40 - singleServices.length - index}`;\n\n      serviceTitle.addEventListener(`click`, () => {\n        toggleServiceList(serviceTitle, serviceList);\n      });\n\n      window.addEventListener(`resize`, () => {\n        if (window.innerWidth >= DESKTOP_WIDTH$1) {\n          serviceTitle.classList.remove(`single-service__title--active`);\n          serviceList.classList.remove(`single-service__list--active`);\n        }\n      });\n    });\n  };\n\n  const initiatePartners = () => {\n    const partners = document.querySelector(`.partners`);\n    const partnersSlider = partners.querySelector(`.partners__slider`);\n    const buttonPrevious = partners.querySelector(`.partners__button--previous`);\n    const buttonNext = partners.querySelector(`.partners__button--next`);\n\n    const swiperSlider = new Swiper(partnersSlider, {\n      direction: `horizontal`,\n      slidesPerView: 4,\n      allowTouchMove: true,\n      spaceBetween: 30,\n      loop: true,\n\n      breakpoints: {\n        767: {\n          slidesPerView: 1,\n          spaceBetween: 0\n        },\n        1199: {\n          slidesPerView: 3,\n          centeredSlides: true,\n          spaceBetween: 0\n        }\n      },\n      pagination: {\n        el: `.swiper-pagination`,\n        clickable: true\n      }\n    });\n\n    buttonNext.addEventListener(`click`, () => {\n      swiperSlider.slideNext();\n    });\n    buttonPrevious.addEventListener(`click`, () => {\n      swiperSlider.slidePrev();\n    });\n  };\n\n  const DESKTOP_WIDTH$2 = 1200;\n  const ICONS_SIZES = {\n    DESKTOP: {sizes: [72, 98], offset: [-35, -90]},\n    MOBILE: {sizes: [21, 28], offset: [-11, -18]}\n  };\n\n  const initiateMap = () => {\n    document.addEventListener(`DOMContentLoaded`, () => {\n      const setIconSizes = () => {\n        let icon;\n\n        if (window.innerWidth >= DESKTOP_WIDTH$2) {\n          icon = ICONS_SIZES.DESKTOP;\n        } else {\n          icon = ICONS_SIZES.MOBILE;\n        }\n\n        return icon;\n      };\n\n      const map = document.querySelector(`#map`);\n\n      if (map) {\n        const initiateMap = () => {\n          const bigMap = new ymaps.Map(map, {\n            center: [55.631813, 37.618403],\n            zoom: 16\n          });\n\n          let icon = setIconSizes();\n\n          let iconLocation;\n          if (window.location.href.split(`/build/`).length > 1) {\n            iconLocation = `${\n            window.location.href.split(`/build/`)[0]\n          }/build/img/icons/geo.svg`;\n          } else {\n            iconLocation = `${document.location.origin}/img/icons/geo.svg`;\n          }\n\n          const point = new ymaps.Placemark([55.631813, 37.618403], null, {\n            iconLayout: `default#imageWithContent`,\n            iconImageHref: iconLocation,\n            iconImageSize: icon.sizes,\n            iconImageOffset: icon.offset\n          });\n\n          bigMap.geoObjects.add(point);\n\n          window.addEventListener(`resize`, () => {\n            let changedIcon = setIconSizes();\n\n            if (icon.sizes[0] !== changedIcon.sizes[0]) {\n              point.options.set(`iconImageSize`, changedIcon.sizes);\n              point.options.set(`iconImageOffset`, changedIcon.offset);\n              icon = changedIcon;\n            }\n          });\n        };\n\n        ymaps.ready(initiateMap);\n      }\n    });\n  };\n\n  const initiateContactsForm = () => {\n    const contacts = document.querySelector(`.contacts`);\n    const contactsForm = contacts.querySelector(`.contacts__form`);\n    const inputName = contactsForm.querySelector(`#name`);\n    const inputPhone = contactsForm.querySelector(`#phone`);\n    const inputEmail = contactsForm.querySelector(`#email`);\n    const submitButton = contactsForm.querySelector(`.contacts__submit `);\n\n    inputName.addEventListener(`keyup`, (evt) => {\n      const allowedSymbols = /^[A-Za-zА-Яа-яЁё\\s]+$/;\n      if (!allowedSymbols.test(evt.target.value)) {\n        evt.target.value = evt.target.value.substring(\n            0,\n            evt.target.value.length - 1\n        );\n      }\n    });\n\n    inputPhone.addEventListener(`keyup`, (evt) => {\n      const phonePattern = /7-[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}/;\n      const allowedSymbols = /[A-Za-zА-Яа-яЁё]/g;\n\n      if (allowedSymbols.test(evt.target.value)) {\n        evt.target.value = evt.target.value.substring(\n            0,\n            evt.target.value.length - 1\n        );\n      }\n\n      if (!phonePattern.test(evt.target.value)) {\n        inputPhone.setCustomValidity(`Введите номер в формате: 7-999-888-66-55`);\n      } else {\n        inputPhone.setCustomValidity(``);\n      }\n    });\n\n    inputEmail.addEventListener(`keyup`, (evt) => {\n      const emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (!emailPattern.test(evt.target.value)) {\n        inputEmail.setCustomValidity(`Введите email в формате: myemail@mail.ru`);\n      } else {\n        inputEmail.setCustomValidity(``);\n      }\n    });\n\n    submitButton.addEventListener(`click`, (evt) => {\n      evt.preventDefault();\n\n      contactsForm.reportValidity();\n    });\n  };\n\n  initiateMenu();\n  initiateFeatures();\n  initiateServices();\n  initiatePartners();\n  initiateMap();\n  initiateContactsForm();\n\n}());\n"]}