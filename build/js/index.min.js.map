{"version":3,"sources":["index.js"],"names":["mainHeader","initiateMenu","featuresSlider","toggleServiceList","serviceTitle","spaceBetween","partnersSlider","breakpoints","buttonNext","evt","inputName","inputPhone","phonePattern","allowedSymbols","initiateMap","addEventListener","offset","setIconSizes","hideMenu","menuToggler","classList","remove","menuList","singleServices","service","serviceList","document","querySelector","toggle","toggleMenu","window","innerWidth","features","Swiper","centeredSlides","allowTouchMove","loop","slidesPerView","767","pagination","el","clickable","call","querySelectorAll","subServiceTitle","subServiceList","hideServiceList","forEach","subindex","DESKTOP_WIDTH$1","initiatePartners","partners","direction","1199","swiperSlider","slideNext","sizes","MOBILE","slidePrev","icon","ICONS_SIZES","center","map","iconLocation","ymaps","Map","zoom","iconLayout","point","location","Placemark","length","iconImageHref","origin","changedIcon","set","bigMap","geoObjects","add","ready","options","initiateContactsForm","target","slice","contactsForm","value","test","substring","setCustomValidity","inputEmail","initiateServices","submitButton","preventDefault","reportValidity","submit"],"mappings":"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","file":"index.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  const DESKTOP_WIDTH = 1200;\n\n  const initiateMenu = () => {\n    const mainHeader = document.querySelector(`.main-header`);\n    const menuToggler = mainHeader.querySelector(`.main-header__toggler`);\n    const menuList = mainHeader.querySelector(`.main-header__list`);\n\n    const toggleMenu = () => {\n      menuToggler.classList.toggle(`main-header__toggler--active`);\n      menuList.classList.toggle(`main-header__list--active`);\n    };\n\n    const hideMenu = () => {\n      menuToggler.classList.remove(`main-header__toggler--active`);\n      menuList.classList.remove(`main-header__list--active`);\n    };\n\n    menuToggler.addEventListener(`click`, toggleMenu);\n\n    document.addEventListener(`keydown`, (evt) => {\n      if (evt.keyCode === 27) {\n        hideMenu();\n      }\n    });\n\n    window.addEventListener(`resize`, () => {\n      if (window.innerWidth >= DESKTOP_WIDTH) {\n        hideMenu();\n      }\n    });\n  };\n\n  const initiateFeatures = () => {\n    const features = document.querySelector(`.features`);\n    const featuresSlider = features.querySelector(`.features__slider`);\n\n    const swiperSliderFeatures = new Swiper(featuresSlider, {\n      direction: `horizontal`,\n      centeredSlides: true,\n      allowTouchMove: true,\n      loop: true,\n      slidesPerView: 3,\n\n      breakpoints: {\n        767: {\n          slidesPerView: 1\n        }\n      },\n\n      pagination: {\n        el: `.swiper-pagination`,\n        clickable: true\n      }\n    });\n  };\n\n  const DESKTOP_WIDTH$1 = 1200;\n\n  const initiateServices = () => {\n    const services = document.querySelector(`.services`);\n    const singleServices = [].slice.call(\n        services.querySelectorAll(`.single-service`)\n    );\n\n    const toggleServiceList = (serviceTitle, serviceList) => {\n      serviceTitle.classList.toggle(`single-service__title--active`);\n      serviceList.classList.toggle(`single-service__list--active`);\n    };\n\n    const hideServiceList = (serviceTitle, serviceList) => {\n      serviceTitle.classList.remove(`single-service__title--active`);\n      serviceList.classList.remove(`single-service__list--active`);\n    };\n\n    singleServices.forEach((service, index) => {\n      const serviceTitle = service.querySelector(`.single-service__title`);\n      const serviceList = service.querySelector(`.single-service__list`);\n\n      serviceTitle.addEventListener(`click`, () => {\n        singleServices.forEach((service, subindex) => {\n          const subServiceTitle = service.querySelector(`.single-service__title`);\n          const subServiceList = service.querySelector(`.single-service__list`);\n\n          if (index !== subindex) {\n            hideServiceList(subServiceTitle, subServiceList);\n          }\n        });\n\n        toggleServiceList(serviceTitle, serviceList);\n      });\n\n      window.addEventListener(`resize`, () => {\n        if (window.innerWidth >= DESKTOP_WIDTH$1) {\n          hideServiceList(serviceTitle, serviceList);\n        }\n      });\n    });\n  };\n\n  const initiatePartners = () => {\n    const partners = document.querySelector(`.partners`);\n    const partnersSlider = partners.querySelector(`.partners__slider`);\n    const buttonPrevious = partners.querySelector(`.partners__button--previous`);\n    const buttonNext = partners.querySelector(`.partners__button--next`);\n\n    const swiperSlider = new Swiper(partnersSlider, {\n      direction: `horizontal`,\n      slidesPerView: 4,\n      allowTouchMove: true,\n      spaceBetween: 30,\n      loop: true,\n\n      breakpoints: {\n        767: {\n          slidesPerView: 1,\n          spaceBetween: 0\n        },\n        1199: {\n          slidesPerView: 3,\n          centeredSlides: true,\n          spaceBetween: 0\n        }\n      },\n      pagination: {\n        el: `.swiper-pagination`,\n        clickable: true\n      }\n    });\n\n    buttonNext.addEventListener(`click`, () => {\n      swiperSlider.slideNext();\n    });\n    buttonPrevious.addEventListener(`click`, () => {\n      swiperSlider.slidePrev();\n    });\n  };\n\n  const DESKTOP_WIDTH$2 = 1200;\n  const ICONS_SIZES = {\n    DESKTOP: {sizes: [72, 98], offset: [-35, -90]},\n    MOBILE: {sizes: [21, 28], offset: [-11, -18]}\n  };\n\n  const initiateMap = () => {\n    document.addEventListener(`DOMContentLoaded`, () => {\n      const setIconSizes = () => {\n        let icon;\n\n        if (window.innerWidth >= DESKTOP_WIDTH$2) {\n          icon = ICONS_SIZES.DESKTOP;\n        } else {\n          icon = ICONS_SIZES.MOBILE;\n        }\n\n        return icon;\n      };\n\n      const map = document.querySelector(`#map`);\n\n      if (map) {\n        const initiateMap = () => {\n          const bigMap = new ymaps.Map(map, {\n            center: [55.631813, 37.618403],\n            zoom: 16\n          });\n\n          let icon = setIconSizes();\n\n          let iconLocation;\n          if (window.location.href.split(`/build/`).length > 1) {\n            iconLocation = `${\n            window.location.href.split(`/build/`)[0]\n          }/build/img/icons/geo.svg`;\n          } else {\n            iconLocation = `${document.location.origin}/img/icons/geo.svg`;\n          }\n\n          const point = new ymaps.Placemark([55.631813, 37.618403], null, {\n            iconLayout: `default#imageWithContent`,\n            iconImageHref: iconLocation,\n            iconImageSize: icon.sizes,\n            iconImageOffset: icon.offset\n          });\n\n          bigMap.geoObjects.add(point);\n\n          window.addEventListener(`resize`, () => {\n            let changedIcon = setIconSizes();\n\n            if (icon.sizes[0] !== changedIcon.sizes[0]) {\n              point.options.set(`iconImageSize`, changedIcon.sizes);\n              point.options.set(`iconImageOffset`, changedIcon.offset);\n              icon = changedIcon;\n            }\n          });\n        };\n\n        ymaps.ready(initiateMap);\n      }\n    });\n  };\n\n  const initiateContactsForm = () => {\n    const contacts = document.querySelector(`.contacts`);\n    const contactsForm = contacts.querySelector(`.contacts__form`);\n    const inputs = [].slice.call(contactsForm.querySelectorAll(`input`));\n    const inputName = contactsForm.querySelector(`#name`);\n    const inputPhone = contactsForm.querySelector(`#phone`);\n    const inputEmail = contactsForm.querySelector(`#email`);\n    const submitButton = contactsForm.querySelector(`.contacts__submit `);\n\n    inputName.addEventListener(`input`, (evt) => {\n      const allowedSymbols = /^[A-Za-zА-Яа-яЁё\\s]+$/;\n      if (!allowedSymbols.test(evt.target.value)) {\n        evt.target.value = evt.target.value.substring(\n            0,\n            evt.target.value.length - 1\n        );\n      }\n    });\n\n    inputPhone.addEventListener(`input`, (evt) => {\n      const phonePattern = /7-[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}/;\n      const allowedSymbols = /[A-Za-zА-Яа-яЁё]/g;\n\n      if (allowedSymbols.test(evt.target.value)) {\n        evt.target.value = evt.target.value.substring(\n            0,\n            evt.target.value.length - 1\n        );\n      }\n\n      if (!phonePattern.test(evt.target.value)) {\n        inputPhone.setCustomValidity(`Введите номер в формате: 7-999-888-66-55`);\n      } else {\n        inputPhone.setCustomValidity(``);\n      }\n    });\n\n    inputEmail.addEventListener(`input`, (evt) => {\n      const emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (!emailPattern.test(evt.target.value)) {\n        inputEmail.setCustomValidity(`Введите email в формате: myemail@mail.ru`);\n      } else {\n        inputEmail.setCustomValidity(``);\n      }\n    });\n\n    submitButton.addEventListener(`click`, (evt) => {\n      evt.preventDefault();\n\n      if (!contactsForm.reportValidity()) {\n        contactsForm.reportValidity();\n      } else {\n        contactsForm.submit();\n      }\n    });\n  };\n\n  initiateMenu();\n  initiateFeatures();\n  initiateServices();\n  initiatePartners();\n  initiateMap();\n  initiateContactsForm();\n\n}());\n"]}